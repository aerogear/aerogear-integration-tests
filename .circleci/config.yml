version: 2
jobs:
  build-android:
    docker:
      - image: circleci/android:api-28-node
    steps:
      - checkout
      - run:
          name: Install gradle
          command: sudo apt install gradle
      - run:
          name: Install cordova
          command: sudo npm --global install cordova@8
      - run:
          name: Create cordova app
          command: cordova create testing-app
      - run:
          name: Install security package
          command: cd testing-app && npm install --save @aerogear/security
      - run:
          name: Install security plugin
          command: cd testing-app && cordova plugin add @aerogear/cordova-plugin-aerogear-security
      - run:
          name: Install webpack
          command: cd testing-app && npm install --save-dev webpack webpack-cli
      - run:
          name: Copy webpack config
          command: cp fixtures/webpack.config.js testing-app/
      - run:
          name: Copy index.js
          command: cp fixtures/index.js testing-app/
      - run:
          name: Webpack build
          command: cd testing-app && npx webpack
      - run:
          name: Add Android platform
          command: cd testing-app && cordova platform add android
      - run:
          name: Build android app
          command: cd testing-app && cordova build android
      - persist_to_workspace:
          root: testing-app/platforms/android/app/build/outputs/apk/debug/
          paths:
            - app-debug.apk
  test-android:
    docker:
      - image: circleci/node:carbon
    steps:
      - checkout
      - restore_cache:
          name: Restore node modules cache
          keys: 
            - node-modules-{{ .Branch }}-{{ checksum "package.json" }}
            - node-modules-{{ .Branch }}-
            - node-modules-
      - run:
          name: Install node modules
          command: npm install
      - save_cache:
          name: Save node modules cache
          key: node-modules-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - node_modules
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Run E2E tests
          command: |
            export BROWSERSTACK_APP="$(curl -u "$BROWSERSTACK_USER:$BROWSERSTACK_KEY" \
              -X POST https://api-cloud.browserstack.com/app-automate/upload \
              -F "file=@/tmp/workspace/app-debug.apk" | cut -d '"' -f 4)"
            npm start -- test/security/index.js
workflows:
  version: 2
  test:
    jobs:
      - build-android
      - test-android:
          requires:
            - build-android
